Example 1:

Input: num = 123
Output: "One Hundred Twenty Three"
Example 2:

Input: num = 12345
Output: "Twelve Thousand Three Hundred Forty Five"
Example 3:

Input: num = 1234567
Output: "One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven"



class Solution:
    def div(self, num):
        groups = []
        while num > 0:
            groups.append(num % 1000)
            num //= 1000
        return groups[::-1]
        
    def numberToWords(self, num: int) -> str:
        d = {
            0: "Zero", 1: "One", 2: "Two", 3: "Three", 4: "Four", 5: "Five", 6: "Six", 7: "Seven", 8: "Eight", 9: "Nine",
            10: "Ten", 11: "Eleven", 12: "Twelve", 13: "Thirteen", 14: "Fourteen", 15: "Fifteen", 16: "Sixteen",
            17: "Seventeen", 18: "Eighteen", 19: "Nineteen", 20: "Twenty", 30: "Thirty", 40: "Forty", 50: "Fifty",
            60: "Sixty", 70: "Seventy", 80: "Eighty", 90: "Ninety", 100: "Hundred"
        }
        
        if num == 0:
            return d[0]
        
        thislist = self.div(num)
        scales = ["", "Thousand", "Million", "Billion"]
        
        def convert_hundreds(num):
            if num == 0:
                return ""
            elif num < 20:
                return d[num]
            elif num < 100:
                return d[num // 10 * 10] + ("" if num % 10 == 0 else " " + d[num % 10])
            else:
                return d[num // 100] + " Hundred" + ("" if num % 100 == 0 else " " + convert_hundreds(num % 100))
        
        words = []
        for i, group in enumerate(thislist):
            if group > 0:
                words.append(convert_hundreds(group) + (" " + scales[len(thislist) - 1 - i] if scales[len(thislist) - 1 - i] else ""))
        
        return ' '.join(words).strip()
